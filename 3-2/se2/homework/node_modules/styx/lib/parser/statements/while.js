"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var negator_1 = require("../expressions/negator");
var stringifier_1 = require("../expressions/stringifier");
var statement_1 = require("./statement");
function parseWhileStatement(whileStatement, currentNode, context, label) {
    // Truthy test (enter loop)
    var truthyCondition = whileStatement.test;
    var truthyConditionLabel = stringifier_1.stringify(truthyCondition);
    // Falsy test (exit loop)
    var falsyCondition = negator_1.negateTruthiness(truthyCondition);
    var falsyConditionLabel = stringifier_1.stringify(falsyCondition);
    var loopBodyNode = context
        .createNode()
        .appendConditionallyTo(currentNode, truthyConditionLabel, truthyCondition);
    var finalNode = context.createNode();
    context.enclosingStatements.push({
        type: 1 /* OtherStatement */,
        continueTarget: currentNode,
        breakTarget: finalNode,
        label: label
    });
    var loopBodyCompletion = statement_1.parseStatement(whileStatement.body, loopBodyNode, context);
    if (loopBodyCompletion.normal) {
        currentNode.appendEpsilonEdgeTo(loopBodyCompletion.normal);
    }
    context.enclosingStatements.pop();
    finalNode.appendConditionallyTo(currentNode, falsyConditionLabel, falsyCondition);
    return { normal: finalNode };
}
exports.parseWhileStatement = parseWhileStatement;
