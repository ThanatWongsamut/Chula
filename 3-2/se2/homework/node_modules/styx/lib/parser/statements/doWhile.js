"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var negator_1 = require("../expressions/negator");
var stringifier_1 = require("../expressions/stringifier");
var statement_1 = require("./statement");
function parseDoWhileStatement(doWhileStatement, currentNode, context, label) {
    // Truthy test (enter loop)
    var truthyCondition = doWhileStatement.test;
    var truthyConditionLabel = stringifier_1.stringify(truthyCondition);
    // Falsy test (exit loop)
    var falsyCondition = negator_1.negateTruthiness(truthyCondition);
    var falsyConditionLabel = stringifier_1.stringify(falsyCondition);
    var testNode = context.createNode();
    var finalNode = context.createNode();
    context.enclosingStatements.push({
        type: 1 /* OtherStatement */,
        continueTarget: testNode,
        breakTarget: finalNode,
        label: label
    });
    var loopBodyCompletion = statement_1.parseStatement(doWhileStatement.body, currentNode, context);
    context.enclosingStatements.pop();
    currentNode.appendConditionallyTo(testNode, truthyConditionLabel, truthyCondition);
    finalNode.appendConditionallyTo(testNode, falsyConditionLabel, falsyCondition);
    if (loopBodyCompletion.normal) {
        testNode.appendEpsilonEdgeTo(loopBodyCompletion.normal);
    }
    return { normal: finalNode };
}
exports.parseDoWhileStatement = parseDoWhileStatement;
